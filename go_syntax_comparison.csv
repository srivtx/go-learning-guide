Concept,Go,Python,Java
Variable Declaration,"var name string = ""Go""
name := ""Go"" // short form","name = ""Python""
# Dynamic typing","String name = ""Java"";
// Static typing required"
Function Definition,"func add(a, b int) int {
    return a + b
}","def add(a, b):
    return a + b","public static int add(int a, int b) {
    return a + b;
}"
Array Declaration,"arr := [5]int{1, 2, 3, 4, 5}
slice := []int{1, 2, 3}","arr = [1, 2, 3, 4, 5]
# Lists are dynamic","int[] arr = {1, 2, 3, 4, 5};
// Fixed size arrays"
Loop (for),"for i := 0; i < 10; i++ {
    fmt.Println(i)
}","for i in range(10):
    print(i)","for (int i = 0; i < 10; i++) {
    System.out.println(i);
}"
Conditional (if),"if x > 0 {
    fmt.Println(""positive"")
}","if x > 0:
    print(""positive"")","if (x > 0) {
    System.out.println(""positive"");
}"
Class/Struct,"type Person struct {
    Name string
    Age  int
}","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age","public class Person {
    private String name;
    private int age;
    // constructors, getters, setters
}"
Method Call,"person := Person{Name: ""Alice""}
fmt.Println(person.Name)","person = Person(""Alice"", 30)
print(person.name)","Person person = new Person(""Alice"", 30);
System.out.println(person.getName());"
Error Handling,"result, err := divide(10, 0)
if err != nil {
    log.Fatal(err)
}","try:
    result = divide(10, 0)
except Exception as e:
    print(f""Error: {e}"")","try {
    int result = divide(10, 0);
} catch (Exception e) {
    System.err.println(""Error: "" + e.getMessage());
}"
